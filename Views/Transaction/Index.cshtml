@{
    ViewData["Title"] = "Clients";
}
<style>
    #loginIdSuggestions {
        max-height: 200px;
        overflow-y: auto;
        @* width: 100%; *@
    }
</style>


<div class="page">

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create Transaction</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal" action="@Url.Action("Deposit", "Transaction")" method="post">
                        <div class="row mb-3">
                            @* <div class="col-md-6">
                                <label for="loginId" class="form-label">Login ID</label>
                                <input type="text" class="form-control" id="loginId" name="loginId" required />
                            </div> *@
                            <div class="col-md-6">
                                <label for="loginId" class="form-label">Login ID</label>
                                <input type="text" class="form-control" id="loginId" name="loginId" required
                                    autocomplete="off" />
                                <ul id="loginIdSuggestions" class="list-group position-absolute"
                                    style="z-index: 1000; display: none;"></ul>
                            </div>
                            <div class="col-md-6">
                                <label for="fee" class="form-label">Transaction Type</label>
                                <select class="form-select" id="transactionType" name="transactionType" required>
                                    <option value="Deposit">Deposit</option>
                                    <option value="Withdraw">Withdraw</option>
                                </select>
                            </div>

                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="amount" class="form-label">Amount</label>
                                <input type="number" class="form-control" id="amount" name="amount" required />
                            </div>
                            <div class="col-md-6">
                                <label for="fee" class="form-label">Fee</label>
                                <input type="number" class="form-control" id="fee" name="fee" required />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label for="transactionNote" class="form-label">Transaction Note</label>
                                <input type="text" class="form-control" id="transactionNote" name="transactionNote" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <div
        class="page-header d-flex justify-content-between align-items-center mb-3 p-3 border-bottom bg-white shadow-sm rounded">
        <h5 class="mb-0">Transactions</h5>
        <div class="page-actions d-flex gap-2">
            <a asp-controller="Transaction" asp-action="Deposit" class="btn btn-success">
                <i class="bi bi-person-plus"></i>Deposit
            </a>
            <a asp-controller="Transaction" asp-action="Withdraw" class="btn btn-primary">
                <i class="bi bi-person-plus"></i>Withdraw
            </a>
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Launch demo modal
            </button>
        </div>
    </div>
    <div class="page-body">
        <table>
            <thead>
                <tr>
                    <th>Order Number</th>
                    <th>LoginID</th>
                    <th>Method</th>
                    <th>Fee</th>
                    <th>Status</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>1001</td>
                    <td>ACC-5001</td>
                    <td>John Smith</td>
                    <td>john.smith@example.com</td>
                    <td>+1-202-555-0145</td>
                    <td>Admin</td>
                </tr>
                <tr>
                    <td>1002</td>
                    <td>ACC-5002</td>
                    <td>Emily Johnson</td>
                    <td>emily.j@example.com</td>
                    <td>+1-202-555-0188</td>
                    <td>User</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const loginIdInput = document.getElementById('loginId');
        const suggestionsList = document.getElementById('loginIdSuggestions');

        loginIdInput.addEventListener('input', function () {
            const query = this.value;

            if (query.length < 2) {
                suggestionsList.style.display = 'none';
                return;
            }

            fetch(`/Transaction/GetSuggestions?query=${encodeURIComponent(query)}`)
                .then(response => response.json())
                .then(data => {
                    suggestionsList.innerHTML = '';
                    if (data.length > 0) {
                        data.forEach(user => {
                            const listItem = document.createElement('li');
                            listItem.className = 'list-group-item list-group-item-action';
                            listItem.textContent = `${user.name} (${user.email})`;
                            listItem.addEventListener('click', function () {
                                loginIdInput.value = user.name;
                                suggestionsList.style.display = 'none';
                            });
                            suggestionsList.appendChild(listItem);
                        });
                        suggestionsList.style.display = 'block';
                    } else {
                        suggestionsList.style.display = 'none';
                    }
                })
                .catch(error => console.error('Error fetching suggestions:', error));
        });

        document.addEventListener('click', function (event) {
            if (!loginIdInput.contains(event.target) && !suggestionsList.contains(event.target)) {
                suggestionsList.style.display = 'none';
            }
        });
    });
</script>
