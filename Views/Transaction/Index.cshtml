@{
    ViewData["Title"] = "Clients";
}


<div class="page">

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal" action="@Url.Action("Deposit", "Transaction")" method="post">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="loginId" class="form-label">Login ID</label>
                                <input type="text" class="form-control" id="loginId" name="loginId" required />
                            </div>
                            <div class="col-md-6">
                                <label for="amount" class="form-label">Amount</label>
                                <input type="number" class="form-control" id="amount" name="amount" required />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="fee" class="form-label">Fee</label>
                                <input type="number" class="form-control" id="fee" name="fee" required />
                            </div>
                            <div class="col-md-6">
                                <label for="transactionNote" class="form-label">Transaction Note</label>
                                <input type="text" class="form-control" id="transactionNote" name="transactionNote" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <div
        class="page-header d-flex justify-content-between align-items-center mb-3 p-3 border-bottom bg-white shadow-sm rounded">
        <h5 class="mb-0">Transactions</h5>
        <div class="page-actions d-flex gap-2">
            <a asp-controller="Transaction" asp-action="Deposit" class="btn btn-success">
                <i class="bi bi-person-plus"></i>Deposit
            </a>
            <a asp-controller="Transaction" asp-action="Withdraw" class="btn btn-primary">
                <i class="bi bi-person-plus"></i>Withdraw
            </a>
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Launch demo modal
            </button>
        </div>
    </div>
    <div class="page-body">
        <table>
            <thead>
                <tr>
                    <th>Order Number</th>
                    <th>LoginID</th>
                    <th>Method</th>
                    <th>Fee</th>
                    <th>Status</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>1001</td>
                    <td>ACC-5001</td>
                    <td>John Smith</td>
                    <td>john.smith@example.com</td>
                    <td>+1-202-555-0145</td>
                    <td>Admin</td>
                </tr>
                <tr>
                    <td>1002</td>
                    <td>ACC-5002</td>
                    <td>Emily Johnson</td>
                    <td>emily.j@example.com</td>
                    <td>+1-202-555-0188</td>
                    <td>User</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<script>
    // Function to get the anti-forgery token from the page
    function getAntiForgeryToken() {
        const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
        return tokenElement ? tokenElement.value : '';
    }
    const deleteButtons = document.getElementsByClassName('deleteStudent');

    if (deleteButtons.length > 0) {
        Array.from(deleteButtons).forEach(button => {
            button.addEventListener('click', function () {
                debugger;
                const studentId = this.getAttribute('data-id');
                const studentName = this.getAttribute('data-name');
                swal.fire({
                    title: `Are you sure want to delete ${studentName}?`,
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Perform the delete operation
                        $.ajax({
                            url: `/Students/Delete/${studentId}`,
                            type: 'POST',
                            headers: {
                                'RequestVerificationToken': getAntiForgeryToken(), // for ASP.NET Core CSRF protection
                                'Content-Type': 'application/json'
                            },
                            success: function (response) {
                                if (response.success) {
                                    debugger;
                                    Swal.fire({
                                        toast: true,
                                        position: 'top-end',
                                        icon: 'success',
                                        title: `${studentName} has been deleted.`,
                                        showConfirmButton: false,
                                        timer: 1000,
                                        timerProgressBar: true
                                    }).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        toast: true,
                                        position: 'top-end',
                                        icon: 'error',
                                        title: `Failed to delete ${studentName}.`,
                                        showConfirmButton: false,
                                        timer: 2000,
                                        timerProgressBar: true
                                    }).then(() => {
                                        location.reload();
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    toast: true,
                                    position: 'top-end',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    timerProgressBar: true,
                                    icon: 'error',
                                    title: 'Error!',
                                    text: 'Failed to delete student.',
                                });
                            }
                        });
                    }
                })
            })
        })
    };
</script>
