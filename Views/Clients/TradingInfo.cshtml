@model TradingExperienceModel

<div class="page">
    <div>
        <div class="page-body">
            <div>
                <div class="container" style="padding: 0;">
                    <div class="header">
                        <h1> Trading Experience</h1>
                    </div>

                    <form id="trading-form">
                        @Html.AntiForgeryToken()
                        <div class="form-container">
                            <div class="form-group">
                                <label for="yearsOfExperience">How long have you been trading CFDs or FX?</label>
                                <select id="yearsOfExperience" class="form-control" required>
                                    <option value="" selected>Please Select</option>
                                    <option value="Less than 2 year"
                                        selected="@(Model.YearsOfExperience == "Less than 2 year" ? "selected" : null)">
                                        Less than 2 year
                                    </option>
                                    <option value="More than 2 year"
                                        selected="@(Model.YearsOfExperience == "More than 2 year" ? "selected" : null)">
                                        More than 2 year
                                    </option>
                                    <option value="None"
                                        selected="@(Model.YearsOfExperience == "None" ? "selected" : null)">None
                                    </option>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="confirmTradingKnowledge">Based on your trading experience, do you feel you
                                    have a good understanding of the risks involved?</label>
                                <select id="confirmTradingKnowledge" class="form-control" required>
                                    <option value="" selected>Please Select</option>
                                    <option value="Yes" selected="@(Model.ConfirmTradingKnowledge ? "selected" : null)">
                                        Yes
                                    </option>
                                    <option value="No"
                                        selected="@(Model.ConfirmTradingKnowledge == false ? "selected" : null)">No
                                    </option>
                                </select>
                            </div>

                            <button type="submit" id="btnContinue" class="btn-submit">Continue</button>
                            <button type="button" id="btnBack" class="btn-back">Back</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/clientregistration.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("trading-form").addEventListener("submit", function (event) {
            event.preventDefault();
            changeContinueButtonState(true);
            // Handle form submission
            var tradingExperience = document.getElementById("yearsOfExperience").value;
            var confirmTradingKnowledge = document.getElementById("confirmTradingKnowledge").value;
            if (!tradingExperience || !confirmTradingKnowledge) {
                swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'Error!',
                    text: 'Please fill out all required fields.',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return; // Prevent form submission if validation fails
            }

            const formData = {
                yearsOfExperience: document.getElementById("yearsOfExperience").value,
                confirmTradingKnowledge: document.getElementById("confirmTradingKnowledge").value === "Yes"
            }

            fetch('/Clients/SaveTradingInfo', {
                method: 'POST',
                body: JSON.stringify(formData),
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            }).then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Redirect or show success message
                        window.location.href = data.redirectUrl;
                    } else {
                        changeContinueButtonState(false);
                        swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'Error!',
                            text: 'An error occurred. Please try again.',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                    }
                })
                .catch(error => {
                    changeContinueButtonState(false);
                    swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred. Please try again.',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    });
                });
        });

        document.getElementById("btnBack").addEventListener("click", function () {
            window.location.href = '/Clients/IncomeInfo';
        });
    })
</script>